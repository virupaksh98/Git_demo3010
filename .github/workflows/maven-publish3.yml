# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package
on: 
  push:
    branches: [ m ]
jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Clean Job
      run: mvn -B clean --file pom.xml

  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Compile Job
      run: mvn -B compile --file pom.xml 

  staticanalysis:
    name: SA
    needs: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  UnitTesting:
    runs-on: ubuntu-latest
    needs: Compile
    name: Unit Testing    
    steps:
      - run: echo Should run unit tests.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -B test --file pom.xml
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.9
        with:
          files: "target/surefire-reports/*.xml"
  
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    name: Code Coverage
    
    steps:
      - run: echo Should run code coverage.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -X org.jacoco:jacoco-maven-plugin:report 
     
          
  War:
    runs-on: ubuntu-latest
    needs: CodeCoverage
    name: War 

    steps:
      - run: echo should packaging war
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: War packaging
        run: mvn -X war:war
