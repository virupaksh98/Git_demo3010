# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CICD Pipeline

on:
  push:
    branches: [m]

jobs:
  Setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        # distribution: 'temurin'
        # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Maven Clean Job
      run: mvn -B clean --file pom.xml
  Compile:
      runs-on: ubuntu-latest
      needs: Setup
      steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven Compile Job
        run: mvn -B compile --file pom.xml
  StaticAnalysis:
      runs-on: ubuntu-latest
      name: SA
      needs: Compile
      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and Analyse
        env:
         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  UnitTesting:
      runs-on: ubuntu-latest
      name: UT
      needs: Compile
      steps:
        - run: echo should run unit Test
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: Test
          run: mvn -B test --file pom.xml
        - name: Publish Unit Test result
          uses: EnricoMi/publish-unit-test-result-action@v1.9
          with:
            files: "target/surefire-reports/*.xml"
  CodeCoverage:
      runs-on: ubuntu-latest
      name: CC
      needs: UnitTesting
      steps:
        - run: echo should run code Coverage
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: Code Coverage
          run: mvn -X org.jacoco:jacoco-maven-plugin:report 
  War:
      runs-on: ubuntu-latest
      needs: CodeCoverage
      steps:
        - run: echo should package war
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: War
          run: mvn -X war:war
  Publish:
    runs-on: ubuntu-latest
    needs: War
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
 
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
  Docker:
    runs-on: ubuntu-latest
    name: Docker
    needs: War
    steps:
        # - name: Checkout Code
        #   uses: actions/checkout@v2
        # - name: Push into Docker
        #   uses: docker/build-push-action@v2
        #   with:
        #    username: ${{ secrets.DOCKER_USER }}
        #    password: ${{ secrets.DOCKER_PASS }}
        #    repository: ${{ secrets.DOCKER_REPO }}
        #    tag_with_ref: true
      -  name: Set up QEMU
         uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          repository: ${{ secrets.DOCKER_REPO }}
          tag_with_ref: true
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: madhurimabb/gitopsdemocalcproject:RR
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

        
    
        
        
         
        
