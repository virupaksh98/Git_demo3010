# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI pipeline
on:
  push:
    branches: [main]

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'        
    - name: Clean with Maven
      run: mvn -B clean --file pom.xml
  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'        
    - name: Compile with Maven
      run: mvn -B compile --file pom.xml
  StaticAnalysis:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
    - uses: actions/checkout@v2  
      with:
          fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17' 
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    - name: Static Analysis
      env:
          GITHUB_TOKEN: ${{ secrets.Git_Token }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.for_demo }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  UnitTesting:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
    - run: echo should run unit Tests
    - uses: actions/checkout@v2  
    - name: UnitTesting with Maven
      run: mvn -B test --file pom.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.9
      with:
          files: "target/surefire-reports/*.xml"
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    steps:
    - run: echo should CodeCoverage
    - uses: actions/checkout@v2  
    - name: UnitTesting with Maven
      run: mvn -X org.jacoco:jacoco-maven-plugin:report
  War:
    runs-on: ubuntu-latest
    needs: CodeCoverage
    steps:
    - run: echo should package
    - uses: actions/checkout@v2  
    - name: war 
      run: mvn -X war:war
  publish:

    runs-on: ubuntu-latest
    needs: War
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
 
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}



  
      

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
