# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package
on: 
  push:
    branches: [ m ]
jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Clean Job
      run: mvn -B clean --file pom.xml

  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Compile Job
      run: mvn -B compile --file pom.xml 

  staticanalysis:
    name: SA
    needs: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  UnitTesting:
    runs-on: ubuntu-latest
    needs: Compile
    name: Unit Testing    
    steps:
      - run: echo Should run unit tests.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -B test --file pom.xml
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.9
        with:
          files: "target/surefire-reports/*.xml"
  
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    name: Code Coverage
    
    steps:
      - run: echo Should run code coverage.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -X org.jacoco:jacoco-maven-plugin:report 
     
          
  War:
    runs-on: ubuntu-latest
    needs: CodeCoverage
    name: War 

    steps:
      - run: echo should packaging war
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: War packaging
        run: mvn -X war:war
        
  publish:

    runs-on: ubuntu-latest
    needs: War
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
 
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

  docker:
    name: Publish Dockerhub
    runs-on: ubuntu-latest
    needs: War
    steps:
      -  name: Check out the repo
         uses: actions/checkout@v2
      -  name: Push to Dockerhub
         uses: docker/build-push-action@v2
         with:
           username: ${{ secrets.DOCKER_USER }}
           password: ${{ secrets.DOCKER_PASS }}
           repository: ${{ secrets.DOCKER_REPO }}
           tag_with_ref: true
  # dockerImagePush:
  #   name: push Docker image
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     -  name: Check out the repo
  #        uses: actions/checkout@v2
  #     -  name: Push to GitHubpackages
  #        uses: docker/build-push-action@v2
  #        with:
  #          username: ${{ secrets.actor }}
  #          password: ${{ secrets.GAToken }}
  #          repository: 
  #          tag_with_ref: true
         
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_PASS }}
      #     repository: ${{ secrets.DOCKER_REPO }}
      #     tag_with_ref: true
      # -
      #   name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: nidayra/gitopsdemocalcproject:gitopsdemocalcproject-latest
      # -
      #   name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

